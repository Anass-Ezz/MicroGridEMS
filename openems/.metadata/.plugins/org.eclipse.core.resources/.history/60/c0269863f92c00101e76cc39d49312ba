package io.openems.edge.windturbine.api;

import org.osgi.annotation.versioning.ProviderType;

import io.openems.common.channel.PersistencePriority;
import io.openems.common.channel.Unit;
import io.openems.common.types.OpenemsType;
import io.openems.edge.common.channel.Doc;
import io.openems.edge.common.component.OpenemsComponent;

@ProviderType
public interface WindTurbine extends OpenemsComponent {

	public enum ChannelId implements io.openems.edge.common.channel.ChannelId {
		
//		Characteristics
		CUT_IN_SPEED(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		RATED_SPEED(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		CUT_OUT_SPEED(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		MAX_POWER(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.WATT)
				.persistencePriority(PersistencePriority.HIGH)),
		
		MAX_TORQUE(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		
		MIN_PITCH_ANGLE(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		
		MAX_PITCH_ANGLE(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		
//		Wind Summary
		
		WIND_SPEED(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		
		MAX_WIND_POWER(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.WATT)
				.persistencePriority(PersistencePriority.HIGH)),
		
		ROTOR_SPEED(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),

		PITCH_ANGLE(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		
		ELECTROMAGNETIC_TORQUE(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.NONE)
				.persistencePriority(PersistencePriority.HIGH)),
		
		GENERATED_POWER(Doc.of(OpenemsType.INTEGER)
				.unit(Unit.WATT)
				.persistencePriority(PersistencePriority.HIGH)),


		
		
		
		
		
		
		
		;

		private final Doc doc;

		private ChannelId(Doc doc) {
			this.doc = doc;
		}

		@Override
		public Doc doc() {
			return this.doc;
		}
	}

}
